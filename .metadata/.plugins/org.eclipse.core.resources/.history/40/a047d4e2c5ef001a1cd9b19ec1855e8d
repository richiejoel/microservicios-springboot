package com.heavy.springboot.app.oauth.security.event;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.authentication.AuthenticationEventPublisher;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.AuthenticationException;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.stereotype.Component;

import com.heavy.springboot.app.commons.usuarios.models.entity.Usuario;
import com.heavy.springboot.app.oauth.services.IUsuarioService;

import feign.FeignException;

@Component
public class AuthenticationSuccessErrorHandler implements AuthenticationEventPublisher {
	
	private Logger log = LoggerFactory.getLogger(AuthenticationSuccessErrorHandler.class);
	
	@Autowired
	private IUsuarioService usuarioService;
	
	@Override
	public void publishAuthenticationSuccess(Authentication authentication) {
		
		if (authentication.getName().equalsIgnoreCase("frontendapp")) {
			return; // si es igual a frontendapp se salen del método!
		}
		
		UserDetails user = (UserDetails) authentication.getPrincipal();
		String mensajeLog = "Success login: " + user.getUsername();
		System.out.println(mensajeLog);
		log.info(mensajeLog);
		
		 Usuario usuario = usuarioService.findByUsername(authentication.getName());
		 
		 if(usuario.getIntentos() != null && usuario.getIntentos() > 0 ) {
			 usuario.setIntentos(0);
			 usuarioService.update(usuario, usuario.getId());
		 }
	}

	@Override
	public void publishAuthenticationFailure(AuthenticationException exception, Authentication authentication) {
		String mensajeError = "Error en el Login " + exception.getMessage();
		log.error(mensajeError);
		System.out.println(mensajeError);
		
		try {
		 StringBuilder errors = new StringBuilder();
		 Usuario usuario = usuarioService.findByUsername(authentication.getName());
		 if(usuario.getIntentos() == null) {
			 usuario.setIntentos(0);
		 }
		 
		 log.info("Intento actual es de : " + usuario.getIntentos());
		 usuario.setIntentos(usuario.getIntentos() + 1);
		 log.info("Intento después son de : " + usuario.getIntentos());
		 
		 if(usuario.getIntentos() >= 3) {
			 log.error(String.format("El usuario %s ha sido deshabilitado por superar su máximo de intentos de Autenticación. ", usuario.getUsername()));
			 usuario.setEnabled(false);
		 }
		 
		 usuarioService.update(usuario, usuario.getId());
		 
		} catch (FeignException ex) {
			log.error(String.format("El usuario %s no existe en el sistema. ", authentication.getName()));
		}
	}

}
